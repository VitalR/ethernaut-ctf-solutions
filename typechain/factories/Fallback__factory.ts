/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Fallback, FallbackInterface } from "../Fallback";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550683635c9adc5dea00000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610728806100ad6000396000f3fe60806040526004361061004e5760003560e01c80633ccfd60b1461012757806342e94c901461013e5780638da5cb5b1461017b578063d7bb99ba146101a6578063f10fdf5c146101b057610122565b36610122576000341180156100a257506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6100e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d890610515565b60405180910390fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055005b600080fd5b34801561013357600080fd5b5061013c6101db565b005b34801561014a57600080fd5b5061016560048036038101906101609190610598565b6102d2565b60405161017291906105de565b60405180910390f35b34801561018757600080fd5b506101906102ea565b60405161019d9190610608565b60405180910390f35b6101ae61030e565b005b3480156101bc57600080fd5b506101c5610497565b6040516101d291906105de565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610269576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102609061066f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102cf573d6000803e3d6000fd5b50565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b66038d7ea4c680003410610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034e90610515565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103a691906106be565b92505081905550600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561049557336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600082825260208201905092915050565b50565b60006104ff6000836104de565b915061050a826104ef565b600082019050919050565b6000602082019050818103600083015261052e816104f2565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105658261053a565b9050919050565b6105758161055a565b811461058057600080fd5b50565b6000813590506105928161056c565b92915050565b6000602082840312156105ae576105ad610535565b5b60006105bc84828501610583565b91505092915050565b6000819050919050565b6105d8816105c5565b82525050565b60006020820190506105f360008301846105cf565b92915050565b6106028161055a565b82525050565b600060208201905061061d60008301846105f9565b92915050565b7f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b60006106596017836104de565b915061066482610623565b602082019050919050565b600060208201905081810360008301526106888161064c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106c9826105c5565b91506106d4836105c5565b92508282019050808211156106ec576106eb61068f565b5b9291505056fea26469706673582212204737f302327a19c093395b72051366213150a6fa667d47503406cab5d010b30564736f6c63430008110033";

export class Fallback__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Fallback> {
    return super.deploy(overrides || {}) as Promise<Fallback>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Fallback {
    return super.attach(address) as Fallback;
  }
  connect(signer: Signer): Fallback__factory {
    return super.connect(signer) as Fallback__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FallbackInterface {
    return new utils.Interface(_abi) as FallbackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Fallback {
    return new Contract(address, _abi, signerOrProvider) as Fallback;
  }
}
