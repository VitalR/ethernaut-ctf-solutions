/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Fallback, FallbackInterface } from "../Fallback";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550683635c9adc5dea00000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610676806100ad6000396000f3fe60806040526004361061004e5760003560e01c80633ccfd60b146100f157806342e94c90146101085780638da5cb5b14610145578063d7bb99ba14610170578063f10fdf5c1461017a576100ec565b366100ec576000341180156100a257506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6100ab57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055005b600080fd5b3480156100fd57600080fd5b506101066101a5565b005b34801561011457600080fd5b5061012f600480360381019061012a91906104d5565b61029c565b60405161013c919061051b565b60405180910390f35b34801561015157600080fd5b5061015a6102b4565b6040516101679190610545565b60405180910390f35b6101786102d8565b005b34801561018657600080fd5b5061018f61042b565b60405161019c919061051b565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022a906105bd565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610299573d6000803e3d6000fd5b50565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b66038d7ea4c6800034106102eb57600080fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461033a919061060c565b92505081905550600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561042957336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a282610477565b9050919050565b6104b281610497565b81146104bd57600080fd5b50565b6000813590506104cf816104a9565b92915050565b6000602082840312156104eb576104ea610472565b5b60006104f9848285016104c0565b91505092915050565b6000819050919050565b61051581610502565b82525050565b6000602082019050610530600083018461050c565b92915050565b61053f81610497565b82525050565b600060208201905061055a6000830184610536565b92915050565b600082825260208201905092915050565b7f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b60006105a7601783610560565b91506105b282610571565b602082019050919050565b600060208201905081810360008301526105d68161059a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061061782610502565b915061062283610502565b925082820190508082111561063a576106396105dd565b5b9291505056fea2646970667358221220b018193c9f3e309ec79ef50f50af568f52ea599c8af12e7a716eac9c6903f64b64736f6c63430008110033";

export class Fallback__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Fallback> {
    return super.deploy(overrides || {}) as Promise<Fallback>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Fallback {
    return super.attach(address) as Fallback;
  }
  connect(signer: Signer): Fallback__factory {
    return super.connect(signer) as Fallback__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FallbackInterface {
    return new utils.Interface(_abi) as FallbackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Fallback {
    return new Contract(address, _abi, signerOrProvider) as Fallback;
  }
}
