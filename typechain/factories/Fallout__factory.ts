/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Fallout, FalloutInterface } from "../Fallout";

const _abi = [
  {
    inputs: [],
    name: "Fal1out",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "allocate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "allocator",
        type: "address",
      },
    ],
    name: "allocatorBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectAllocations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "allocator",
        type: "address",
      },
    ],
    name: "sendAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061076e806100206000396000f3fe6080604052600436106100555760003560e01c80636fab5ddf1461005a5780638aa96f38146100645780638da5cb5b1461007b578063a2dea26f146100a6578063abaa9916146100cf578063ffd40b56146100d9575b600080fd5b610062610116565b005b34801561007057600080fd5b506100796101bd565b005b34801561008757600080fd5b50610090610294565b60405161009d91906104fa565b60405180910390f35b3480156100b257600080fd5b506100cd60048036038101906100c89190610546565b6102b8565b005b6100d76103c3565b005b3480156100e557600080fd5b5061010060048036038101906100fb91906105b1565b61045a565b60405161010d91906105f7565b60405180910390f35b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102429061066f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610291573d6000803e3d6000fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161033a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610331906106b5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501580156103bf573d6000803e3d6000fd5b5050565b61041534600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104a390919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600081836104b19190610704565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104e4826104b9565b9050919050565b6104f4816104d9565b82525050565b600060208201905061050f60008301846104eb565b92915050565b600080fd5b610523816104d9565b811461052e57600080fd5b50565b6000813590506105408161051a565b92915050565b60006020828403121561055c5761055b610515565b5b600061056a84828501610531565b91505092915050565b600061057e826104b9565b9050919050565b61058e81610573565b811461059957600080fd5b50565b6000813590506105ab81610585565b92915050565b6000602082840312156105c7576105c6610515565b5b60006105d58482850161059c565b91505092915050565b6000819050919050565b6105f1816105de565b82525050565b600060208201905061060c60008301846105e8565b92915050565b600082825260208201905092915050565b7f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b6000610659601783610612565b915061066482610623565b602082019050919050565b600060208201905081810360008301526106888161064c565b9050919050565b50565b600061069f600083610612565b91506106aa8261068f565b600082019050919050565b600060208201905081810360008301526106ce81610692565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061070f826105de565b915061071a836105de565b9250828201905080821115610732576107316106d5565b5b9291505056fea264697066735822122011c66193af7b023f15c69c4f35e839e1d9614c78555cd3e05e2be3773b91f09e64736f6c63430008110033";

export class Fallout__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Fallout> {
    return super.deploy(overrides || {}) as Promise<Fallout>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Fallout {
    return super.attach(address) as Fallout;
  }
  connect(signer: Signer): Fallout__factory {
    return super.connect(signer) as Fallout__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FalloutInterface {
    return new utils.Interface(_abi) as FalloutInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Fallout {
    return new Contract(address, _abi, signerOrProvider) as Fallout;
  }
}
